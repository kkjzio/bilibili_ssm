###配置日志根Logger,DEBUG级别以上的日志都输出到stdout和file、E位置（DEBUG是最底层配置，后面stdout、file、E各模块可以根据需求再重新制定日志打印级别）（stdout、file、E 可以自定义名称，本次实例中stdout用于面板打印，file和E则将日志信息打印输出到文件）
log4j.rootLogger=DEBUG,stdout,file,E 
log4j.additivity.org.apache=false

###配置日志信息输出目的地Appender（控制台），只打印INFO级别以上日志到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.threshold=INFO
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd hh:mm:ss} [%-5p](%c - %t):%L - %m%n

###配置输出debug以上信息到文件，且大小到达指定尺寸的时候产生一个新的文件（最多保存十个日志文件，后续的日志文件会自动覆盖）
log4j.appender.file=org.apache.log4j.RollingFileAppender
###最大文件大小
log4j.appender.file.maxFileSize=100MB
###最多存在几个备份文件
log4j.appender.file.maxBackupIndex=10
# 打印该级别及以上级别日志
log4j.appender.file.Threshold=DEBUG
log4j.appender.file.append=true
# 文件生成位置及其日志文件名称(此相对路径默认在tomcat的bin里)
log4j.appender.file.File=./logs/info.log
# 指定日志打印时的格式为自定义，这个一般要配合下一条的配置一起使用。
log4j.appender.file.layout=org.apache.log4j.PatternLayout
#  自定义的日志打印格式，具体参数含义可以参考后面的log4j.properties参数详解
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd hh:mm:ss} [%-5p](%c - %t):%L  - %m%n

###配置输出异常信息到文件，且大小到达指定尺寸的时候产生一个新的文件（各个配置含义与上面一条配置类似）
log4j.appender.E=org.apache.log4j.RollingFileAppender
log4j.appender.E.maxFileSize=100MB
log4j.appender.E.maxBackupIndex=10
log4j.appender.E.Threshold=ERROR
log4j.appender.E.append=true
log4j.appender.E.File=./logs/error.log
log4j.appender.E.layout=org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern=%d{yyyy-MM-dd hh:mm:ss} [%-5p](%c - %t):%L - %m%n